version: 2.1

parameters:
  base-version:
    type: string
    # Check https://hub.docker.com/r/cimg/base for tag options
    default: "current"
  otp-version:
    type: string
    default: "27.3.4"

references:
  - &job
    parameters:
      base-image:
        type: string
        default: "cimg/base:<<pipeline.parameters.base-version>>"
      otp-version:
        type: string
        default: <<pipeline.parameters.otp-version>>
      resource-class:
        type: string
        default: "medium"
    machine:
      image: ubuntu-2204:current
    resource_class: <<parameters.resource-class>>
  - &compile-amd64
    name: compile-amd64
  - &compile-arm64
    name: compile-arm64
    resource-class: "arm.medium"
  - &build
    context: mongooseim-org
    requires:
      - compile-amd64
      - compile-arm64

commands:
  update_docker:
    steps:
      - run:
          name: Update docker
          command: |
            sudo apt-get update
            sudo apt-get --only-upgrade install docker-ce docker-ce-cli containerd.io

jobs:
  compile:
    <<: *job
    steps:
      - update_docker
      - checkout
      - run:
          name: Compile Erlang/OTP
          command: |
            BASE_IMAGE=<<parameters.base-image>> \
            OTP_VERSION=<<parameters.otp-version>> \
            PROGRESS=plain ./compile.sh
      - persist_to_workspace:
          root: ~/project/
          paths: ["builds"]
  build:
    <<: *job
    steps:
      - update_docker
      - checkout
      - attach_workspace:
          at: "~/project"
      - run:
          name: Setup buildx
          command: |
            docker run --privileged --rm tonistiigi/binfmt --install all
            docker buildx create --name builder --driver docker-container --bootstrap --use
      - run:
          name: Docker login
          command: docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS}
      - run:
          name: Build multi-platform docker image
          command: |
            BASE_IMAGE=<<parameters.base-image>> \
            OTP_VERSION=<<parameters.otp-version>> ./circleci-build.sh

workflows:
  cimg:
    jobs:
      - compile: *compile-amd64
      - compile: *compile-arm64
      - build: *build
  debian-bookworm:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "debian:bookworm"
      - compile:
          <<: *compile-arm64
          base-image: "debian:bookworm"
      - build:
          <<: *build
          base-image: "debian:bookworm"
  debian-bullseye:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "debian:bullseye"
      - compile:
          <<: *compile-arm64
          base-image: "debian:bullseye"
      - build:
          <<: *build
          base-image: "debian:bullseye"
  debian-buster:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "debian:buster"
      - compile:
          <<: *compile-arm64
          base-image: "debian:buster"
      - build:
          <<: *build
          base-image: "debian:buster"
  ubuntu-plucky:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "ubuntu:plucky"
      - compile:
          <<: *compile-arm64
          base-image: "ubuntu:plucky"
      - build:
          <<: *build
          base-image: "ubuntu:plucky"
  ubuntu-noble:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "ubuntu:noble"
      - compile:
          <<: *compile-arm64
          base-image: "ubuntu:noble"
      - build:
          <<: *build
          base-image: "ubuntu:noble"
  ubuntu-jammy:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "ubuntu:jammy"
      - compile:
          <<: *compile-arm64
          base-image: "ubuntu:jammy"
      - build:
          <<: *build
          base-image: "ubuntu:jammy"
  ubuntu-focal:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "ubuntu:focal"
      - compile:
          <<: *compile-arm64
          base-image: "ubuntu:focal"
      - build:
          <<: *build
          base-image: "ubuntu:focal"
  rockylinux-9:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "rockylinux:9"
      - compile:
          <<: *compile-arm64
          base-image: "rockylinux:9"
      - build:
          <<: *build
          base-image: "rockylinux:9"
  rockylinux-8:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "rockylinux:8"
      - compile:
          <<: *compile-arm64
          base-image: "rockylinux:8"
      - build:
          <<: *build
          base-image: "rockylinux:8"
  almalinux-9:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "almalinux:9"
      - compile:
          <<: *compile-arm64
          base-image: "almalinux:9"
      - build:
          <<: *build
          base-image: "almalinux:9"
  almalinux-8:
    jobs:
      - compile:
          <<: *compile-amd64
          base-image: "almalinux:8"
      - compile:
          <<: *compile-arm64
          base-image: "almalinux:8"
      - build:
          <<: *build
          base-image: "almalinux:8"
